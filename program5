#include <stdio.h>
#include <stdlib.h>
#include <math.h>

struct triangle
{
    int a;
    int b;
    int c;
};

typedef struct triangle triangle;

double calculate_area(int a, int b, int c) {
    double s = (a + b + c) / 2.0;
    double area = sqrt(s * (s - a) * (s - b) * (s - c));
    return area;
}

void sort_by_area(triangle* tr, int n) {
    double areas[n];
    for (int i = 0; i < n; i++) {
        areas[i] = calculate_area(tr[i].a, tr[i].b, tr[i].c);
    }
    
    // Bubble sort based on areas
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (areas[j] > areas[j + 1]) {
                // Swap areas
                double temp_area = areas[j];
                areas[j] = areas[j + 1];
                areas[j + 1] = temp_area;
                
                // Swap triangles
                triangle temp_tr = tr[j];
                tr[j] = tr[j + 1];
                tr[j + 1] = temp_tr;
            }
        }
    }
}

int main() {
    int n;
    scanf("%d", &n);
    
    triangle *tr = malloc(n * sizeof(triangle));
    for (int i = 0; i < n; i++) {
        scanf("%d%d%d", &tr[i].a, &tr[i].b, &tr[i].c);
    }
    
    sort_by_area(tr, n);
    
    for (int i = 0; i < n; i++) {
        printf("%d %d %d\n", tr[i].a, tr[i].b, tr[i].c);
    }
    
    return 0;
}
